import game2048 as gm

'Use tests dictionary to switch on one of the tests.'

# Tests.
def decimal_to_quaternary(dec_num: int) -> tuple[int]: # FIXME генерировать только числа от 0 до 255, возвращать кортеж с цифрами полученного числа.
  quaternary_lst = []
  while dec_num >= 4:
    quaternary_lst.insert(0, dec_num % 4)
    # print(dec_num % 4, str(quaternary_lst))
    dec_num //= 4

  if len(quaternary_lst) < 4:
    quaternary_lst.insert(0, dec_num)

  # print(dec_num, str(quaternary_lst))
  while len(quaternary_lst) != 4:
    quaternary_lst.insert(0, 0)

  return tuple(quaternary_lst)


def get_some_possible_lines(): # All possible 4 cells lines made from four different values: 0, 2, 4, 8
  # Amount of different lines: 4^4 = 256
  for i in range(256):    
    yield decimal_to_quaternary(i)


def repr_some_possible_lines():
  for line in get_some_possible_lines():    
    print(f'({str(line)}, ),')

# repr_some_possible_lines()


if __name__ == '__main__':

  game = gm.Game2048()
  game.show_score()
  game.show_game_field()
  user_input = input('> ')

  while user_input != 'exit':  
    # print(f'{game.get_action_code_by_action_name(user_input) = }')  
    respond_code, respond_msg = game.game_2048_main(user_input)
    game.show_score()
    game.show_game_field()
    print(respond_code, respond_msg)
    user_input = input('> ')
  exit()

  tests = {
    'is_action_code_correct': 0,
    'get_action_code_by_action_name': 0,
    'get_line': 0,
    'can_line_be_shifted': 0,
    'can_line_be_summed': 0,
    'get_directions_to_move': 0,
    'sum_line': 0,
    'shift_line': 0,
  }
  game = Game2048()
  for key, need_to_be_tested in tests.items():
    if key == 'is_action_code_correct' and need_to_be_tested:
      assert game.is_action_name_correct('up'), 'is_action_code_correct up'
      assert game.is_action_name_correct('w'), 'is_action_code_correct w'
      assert game.is_action_name_correct('left'), 'is_action_code_correct left'
      assert game.is_action_name_correct('a'), 'is_action_code_correct a'
      assert game.is_action_name_correct('down'), 'is_action_code_correct down'
      assert game.is_action_name_correct('s'), 'is_action_code_correct s'
      assert game.is_action_name_correct('right'), 'is_action_code_correct right'
      assert game.is_action_name_correct('d'), 'is_action_code_correct d'
      assert game.is_action_name_correct('back'), 'is_action_code_correct back'
      assert not game.is_action_name_correct('unknown'), 'is_action_code_correct unknown'
      # ~ Залогировать что тесты is_action_name_correct прошли успешно.
    
    if key == 'get_action_code_by_action_name' and need_to_be_tested:
      assert game.get_action_code_by_action_name('up') == 0, 'get_action_code_by_action_name up'
      assert game.get_action_code_by_action_name('w') == 0, 'get_action_code_by_action_name w'
      assert game.get_action_code_by_action_name('left') == 1, 'get_action_code_by_action_name left'
      assert game.get_action_code_by_action_name('a') == 1, 'get_action_code_by_action_name a'
      assert game.get_action_code_by_action_name('down') == 2, 'get_action_code_by_action_name down'
      assert game.get_action_code_by_action_name('s') == 2, 'get_action_code_by_action_name s'
      assert game.get_action_code_by_action_name('right') == 3, 'get_action_code_by_action_name right'
      assert game.get_action_code_by_action_name('d') == 3, 'get_action_code_by_action_name d'
      assert game.get_action_code_by_action_name('back') == 4, 'get_action_code_by_action_name back'

    if key == 'get_line' and need_to_be_tested:
      game._Game_2048__game_field =[
        ['00', '01', '02', '03'],
        ['10', '11', '12', '13'],
        ['20', '21', '22', '23'],
        ['30', '31', '32', '33'],
      ]
      direction_to_line = {
        'up':[
          ['00', '10', '20', '30'],
          ['01', '11', '21', '31'],
          ['02', '12', '22', '32'],
          ['03', '13', '23', '33'],
        ],            
        'left':[
          ['00', '01', '02', '03'],
          ['10', '11', '12', '13'],
          ['20', '21', '22', '23'],
          ['30', '31', '32', '33'],
        ],
        'down':[
          ['30', '20', '10', '00'],
          ['31', '21', '11', '01'],
          ['32', '22', '12', '02'],
          ['33', '23', '13', '03'],
        ],      
        'right':[
          ['03', '02', '01', '00'],
          ['13', '12', '11', '10'],
          ['23', '22', '21', '20'],
          ['33', '32', '31', '30'],
        ]
      }
      for direction_code in [0, 1, 2, 3]:
        for line_number in range(4):
          print(direction_code, str(line_number))
          print(f'{game.get_line(direction_code, line_number) = }' )
          print(f'{direction_to_line[direction_code][line_number]=} supposed')
          assert game.get_line(direction_code, line_number) == direction_to_line[direction_code][line_number], f'get_line {direction_code} {line_number}'

    if key == 'can_line_be_shifted' and need_to_be_tested:
      lines = [
        ([0, 0, 0, 0], False),
        ([0, 0, 0, 2], True),
        ([0, 0, 2, 0], True),
        ([0, 2, 0, 0], True),
        ([2, 0, 0, 0], False),

        ([0, 0, 2, 2], True),
        ([0, 2, 0, 2], True),
        ([2, 0, 0, 2], True),
        ([0, 2, 2, 0], True),
        ([2, 0, 2, 0], True),
        ([2, 2, 0, 0], False),

        ([0, 2, 2, 2], True),
        ([2, 0, 2, 2], True),
        ([2, 2, 0, 2], True),
        ([2, 2, 2, 0], False),

        ([2, 2, 2, 2], False)
      ]
      # print(f'{'line':<12} {'game.can_line_be_shifted(line)':<}')
      for line, can_line_be_shifted in lines:
        # print(f'{str(line):<10} {game.can_line_be_shifted(line)}')
        assert game.can_line_be_shifted(line) == can_line_be_shifted, f'can_line_be_shifted {line}'

    if key == 'can_line_be_summed' and need_to_be_tested:
      possible_lines = get_some_possible_lines()
      lines = [
        ((0, 0, 0, 0), False),
        ((0, 0, 0, 1), False),
        ((0, 0, 0, 2), False),
        ((0, 0, 0, 3), False),
        ((0, 0, 1, 0), False),
        ((0, 0, 1, 1), True),
        ((0, 0, 1, 2), False),
        ((0, 0, 1, 3), False),
        ((0, 0, 2, 0), False),
        ((0, 0, 2, 1), False),
        ((0, 0, 2, 2), True),
        ((0, 0, 2, 3), False),
        ((0, 0, 3, 0), False),
        ((0, 0, 3, 1), False),
        ((0, 0, 3, 2), False),
        ((0, 0, 3, 3), True),
        ((0, 1, 0, 0), False),
        ((0, 1, 0, 1), True),
        ((0, 1, 0, 2), False),
        ((0, 1, 0, 3), False),
        ((0, 1, 1, 0), True),
        ((0, 1, 1, 1), True),
        ((0, 1, 1, 2), True),
        ((0, 1, 1, 3), True),
        ((0, 1, 2, 0), False),
        ((0, 1, 2, 1), False),
        ((0, 1, 2, 2), True),
        ((0, 1, 2, 3), False),
        ((0, 1, 3, 0), False),
        ((0, 1, 3, 1), False),
        ((0, 1, 3, 2), False),
        ((0, 1, 3, 3), True),
        ((0, 2, 0, 0), False),
        ((0, 2, 0, 1), False),
        ((0, 2, 0, 2), True),
        ((0, 2, 0, 3), False),
        ((0, 2, 1, 0), False),
        ((0, 2, 1, 1), True),
        ((0, 2, 1, 2), False),
        ((0, 2, 1, 3), False),
        ((0, 2, 2, 0), True),
        ((0, 2, 2, 1), True),
        ((0, 2, 2, 2), True),
        ((0, 2, 2, 3), True),
        ((0, 2, 3, 0), False),
        ((0, 2, 3, 1), False),
        ((0, 2, 3, 2), False),
        ((0, 2, 3, 3), True),
        ((0, 3, 0, 0), False),
        ((0, 3, 0, 1), False),
        ((0, 3, 0, 2), False),
        ((0, 3, 0, 3), True),
        ((0, 3, 1, 0), False),
        ((0, 3, 1, 1), True),
        ((0, 3, 1, 2), False),
        ((0, 3, 1, 3), False),
        ((0, 3, 2, 0), False),
        ((0, 3, 2, 1), False),
        ((0, 3, 2, 2), True),
        ((0, 3, 2, 3), False),
        ((0, 3, 3, 0), True),
        ((0, 3, 3, 1), True),
        ((0, 3, 3, 2), True),
        ((0, 3, 3, 3), True),
        ((1, 0, 0, 0), False),
        ((1, 0, 0, 1), True),
        ((1, 0, 0, 2), False),
        ((1, 0, 0, 3), False),
        ((1, 0, 1, 0), True),
        ((1, 0, 1, 1), True),
        ((1, 0, 1, 2), True),
        ((1, 0, 1, 3), True),
        ((1, 0, 2, 0), False),
        ((1, 0, 2, 1), False),
        ((1, 0, 2, 2), True),
        ((1, 0, 2, 3), False),
        ((1, 0, 3, 0), False),
        ((1, 0, 3, 1), False),
        ((1, 0, 3, 2), False),
        ((1, 0, 3, 3), True),
        ((1, 1, 0, 0), True),
        ((1, 1, 0, 1), True),
        ((1, 1, 0, 2), True),
        ((1, 1, 0, 3), True),
        ((1, 1, 1, 0), True),
        ((1, 1, 1, 1), True),
        ((1, 1, 1, 2), True),
        ((1, 1, 1, 3), True),
        ((1, 1, 2, 0), True),
        ((1, 1, 2, 1), True),
        ((1, 1, 2, 2), True),
        ((1, 1, 2, 3), True),
        ((1, 1, 3, 0), True),
        ((1, 1, 3, 1), True),
        ((1, 1, 3, 2), True),
        ((1, 1, 3, 3), True),
        ((1, 2, 0, 0), False),
        ((1, 2, 0, 1), False),
        ((1, 2, 0, 2), True),
        ((1, 2, 0, 3), False),
        ((1, 2, 1, 0), False),
        ((1, 2, 1, 1), True),
        ((1, 2, 1, 2), False),
        ((1, 2, 1, 3), False),
        ((1, 2, 2, 0), True),
        ((1, 2, 2, 1), True),
        ((1, 2, 2, 2), True),
        ((1, 2, 2, 3), True),
        ((1, 2, 3, 0), False),
        ((1, 2, 3, 1), False),
        ((1, 2, 3, 2), False),
        ((1, 2, 3, 3), True),
        ((1, 3, 0, 0), False),
        ((1, 3, 0, 1), False),
        ((1, 3, 0, 2), False),
        ((1, 3, 0, 3), True),
        ((1, 3, 1, 0), False),
        ((1, 3, 1, 1), True),
        ((1, 3, 1, 2), False),
        ((1, 3, 1, 3), False),
        ((1, 3, 2, 0), False),
        ((1, 3, 2, 1), False),
        ((1, 3, 2, 2), True),
        ((1, 3, 2, 3), False),
        ((1, 3, 3, 0), True),
        ((1, 3, 3, 1), True),
        ((1, 3, 3, 2), True),
        ((1, 3, 3, 3), True),
        ((2, 0, 0, 0), False),
        ((2, 0, 0, 1), False),
        ((2, 0, 0, 2), True),
        ((2, 0, 0, 3), False),
        ((2, 0, 1, 0), False),
        ((2, 0, 1, 1), True),
        ((2, 0, 1, 2), False),
        ((2, 0, 1, 3), False),
        ((2, 0, 2, 0), True),
        ((2, 0, 2, 1), True),
        ((2, 0, 2, 2), True),
        ((2, 0, 2, 3), True),
        ((2, 0, 3, 0), False),
        ((2, 0, 3, 1), False),
        ((2, 0, 3, 2), False),
        ((2, 0, 3, 3), True),
        ((2, 1, 0, 0), False),
        ((2, 1, 0, 1), True),
        ((2, 1, 0, 2), False),
        ((2, 1, 0, 3), False),
        ((2, 1, 1, 0), True),
        ((2, 1, 1, 1), True),
        ((2, 1, 1, 2), True),
        ((2, 1, 1, 3), True),
        ((2, 1, 2, 0), False),
        ((2, 1, 2, 1), False),
        ((2, 1, 2, 2), True),
        ((2, 1, 2, 3), False),
        ((2, 1, 3, 0), False),
        ((2, 1, 3, 1), False),
        ((2, 1, 3, 2), False),
        ((2, 1, 3, 3), True),
        ((2, 2, 0, 0), True),
        ((2, 2, 0, 1), True),
        ((2, 2, 0, 2), True),
        ((2, 2, 0, 3), True),
        ((2, 2, 1, 0), True),
        ((2, 2, 1, 1), True),
        ((2, 2, 1, 2), True),
        ((2, 2, 1, 3), True),
        ((2, 2, 2, 0), True),
        ((2, 2, 2, 1), True),
        ((2, 2, 2, 2), True),
        ((2, 2, 2, 3), True),
        ((2, 2, 3, 0), True),
        ((2, 2, 3, 1), True),
        ((2, 2, 3, 2), True),
        ((2, 2, 3, 3), True),
        ((2, 3, 0, 0), False),
        ((2, 3, 0, 1), False),
        ((2, 3, 0, 2), False),
        ((2, 3, 0, 3), True),
        ((2, 3, 1, 0), False),
        ((2, 3, 1, 1), True),
        ((2, 3, 1, 2), False),
        ((2, 3, 1, 3), False),
        ((2, 3, 2, 0), False),
        ((2, 3, 2, 1), False),
        ((2, 3, 2, 2), True),
        ((2, 3, 2, 3), False),
        ((2, 3, 3, 0), True),
        ((2, 3, 3, 1), True),
        ((2, 3, 3, 2), True),
        ((2, 3, 3, 3), True),
        ((3, 0, 0, 0), False),
        ((3, 0, 0, 1), False),
        ((3, 0, 0, 2), False),
        ((3, 0, 0, 3), True),
        ((3, 0, 1, 0), False),
        ((3, 0, 1, 1), True),
        ((3, 0, 1, 2), False),
        ((3, 0, 1, 3), False),
        ((3, 0, 2, 0), False),
        ((3, 0, 2, 1), False),
        ((3, 0, 2, 2), True),
        ((3, 0, 2, 3), False),
        ((3, 0, 3, 0), True),
        ((3, 0, 3, 1), True),
        ((3, 0, 3, 2), True),
        ((3, 0, 3, 3), True),
        ((3, 1, 0, 0), False),
        ((3, 1, 0, 1), True),
        ((3, 1, 0, 2), False),
        ((3, 1, 0, 3), False),
        ((3, 1, 1, 0), True),
        ((3, 1, 1, 1), True),
        ((3, 1, 1, 2), True),
        ((3, 1, 1, 3), True),
        ((3, 1, 2, 0), False),
        ((3, 1, 2, 1), False),
        ((3, 1, 2, 2), True),
        ((3, 1, 2, 3), False),
        ((3, 1, 3, 0), False),
        ((3, 1, 3, 1), False),
        ((3, 1, 3, 2), False),
        ((3, 1, 3, 3), True),
        ((3, 2, 0, 0), False),
        ((3, 2, 0, 1), False),
        ((3, 2, 0, 2), True),
        ((3, 2, 0, 3), False),
        ((3, 2, 1, 0), False),
        ((3, 2, 1, 1), True),
        ((3, 2, 1, 2), False),
        ((3, 2, 1, 3), False),
        ((3, 2, 2, 0), True),
        ((3, 2, 2, 1), True),
        ((3, 2, 2, 2), True),
        ((3, 2, 2, 3), True),
        ((3, 2, 3, 0), False),
        ((3, 2, 3, 1), False),
        ((3, 2, 3, 2), False),
        ((3, 2, 3, 3), True),
        ((3, 3, 0, 0), True),
        ((3, 3, 0, 1), True),
        ((3, 3, 0, 2), True),
        ((3, 3, 0, 3), True),
        ((3, 3, 1, 0), True),
        ((3, 3, 1, 1), True),
        ((3, 3, 1, 2), True),
        ((3, 3, 1, 3), True),
        ((3, 3, 2, 0), True),
        ((3, 3, 2, 1), True),
        ((3, 3, 2, 2), True),
        ((3, 3, 2, 3), True),
        ((3, 3, 3, 0), True),
        ((3, 3, 3, 1), True),
        ((3, 3, 3, 2), True),
        ((3, 3, 3, 3), True),
      ]

      for line, true_result in lines:
        # print(f'{line=}, {game.can_line_be_summed(line)}, {true_result=}')
        assert game.can_line_be_summed(line) == true_result, f'{line=}, {game.can_line_be_summed(line)=}, {true_result=}'
    
    if key == 'get_directions_to_move' and need_to_be_tested:
      game._Game_2048__game_field =[
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ]
      game.show_game_field()
      print(f'{game.get_directions_to_move() = }')
      print()

      game._Game_2048__game_field =[
        [2, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ]
      game.show_game_field()
      print(f'{game.get_directions_to_move() = }')
      print()

      game._Game_2048__game_field =[
        [0, 0, 0, 2],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ]
      game.show_game_field()
      print(f'{game.get_directions_to_move() = }')
      print()

      game._Game_2048__game_field =[
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 2],
      ]
      game.show_game_field()
      print(f'{game.get_directions_to_move() = }')
      print()

      game._Game_2048__game_field =[
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [2, 0, 0, 0],
      ]
      game.show_game_field()
      print(f'{game.get_directions_to_move() = }')
      print()

      game._Game_2048__game_field =[
        [2, 2, 2, 2],
        [2, 2, 2, 2],
        [2, 2, 2, 2],
        [2, 2, 2, 2],
      ]
      game.show_game_field()
      print(f'{game.get_directions_to_move() = }')
      print()

      game._Game_2048__game_field =[
        [2, 4, 8, 16],
        [4, 8, 16, 32],
        [8, 16, 32, 64],
        [16, 32, 64, 128],
      ]
      game.show_game_field()
      print(f'{game.get_directions_to_move() = }')
      print()

    if key == 'sum_line' and need_to_be_tested:
      lines = [
        ((0, 0, 0, 0), False),
        ((0, 0, 0, 1), False),
        ((0, 0, 0, 2), False),
        ((0, 0, 0, 3), False),
        ((0, 0, 1, 0), False),
        ((0, 0, 1, 1), True),
        ((0, 0, 1, 2), False),
        ((0, 0, 1, 3), False),
        ((0, 0, 2, 0), False),
        ((0, 0, 2, 1), False),
        ((0, 0, 2, 2), True),
        ((0, 0, 2, 3), False),
        ((0, 0, 3, 0), False),
        ((0, 0, 3, 1), False),
        ((0, 0, 3, 2), False),
        ((0, 0, 3, 3), True),
        ((0, 1, 0, 0), False),
        ((0, 1, 0, 1), True),
        ((0, 1, 0, 2), False),
        ((0, 1, 0, 3), False),
        ((0, 1, 1, 0), True),
        ((0, 1, 1, 1), True),
        ((0, 1, 1, 2), True),
        ((0, 1, 1, 3), True),
        ((0, 1, 2, 0), False),
        ((0, 1, 2, 1), False),
        ((0, 1, 2, 2), True),
        ((0, 1, 2, 3), False),
        ((0, 1, 3, 0), False),
        ((0, 1, 3, 1), False),
        ((0, 1, 3, 2), False),
        ((0, 1, 3, 3), True),
        ((0, 2, 0, 0), False),
        ((0, 2, 0, 1), False),
        ((0, 2, 0, 2), True),
        ((0, 2, 0, 3), False),
        ((0, 2, 1, 0), False),
        ((0, 2, 1, 1), True),
        ((0, 2, 1, 2), False),
        ((0, 2, 1, 3), False),
        ((0, 2, 2, 0), True),
        ((0, 2, 2, 1), True),
        ((0, 2, 2, 2), True),
        ((0, 2, 2, 3), True),
        ((0, 2, 3, 0), False),
        ((0, 2, 3, 1), False),
        ((0, 2, 3, 2), False),
        ((0, 2, 3, 3), True),
        ((0, 3, 0, 0), False),
        ((0, 3, 0, 1), False),
        ((0, 3, 0, 2), False),
        ((0, 3, 0, 3), True),
        ((0, 3, 1, 0), False),
        ((0, 3, 1, 1), True),
        ((0, 3, 1, 2), False),
        ((0, 3, 1, 3), False),
        ((0, 3, 2, 0), False),
        ((0, 3, 2, 1), False),
        ((0, 3, 2, 2), True),
        ((0, 3, 2, 3), False),
        ((0, 3, 3, 0), True),
        ((0, 3, 3, 1), True),
        ((0, 3, 3, 2), True),
        ((0, 3, 3, 3), True),
        ((1, 0, 0, 0), False),
        ((1, 0, 0, 1), True),
        ((1, 0, 0, 2), False),
        ((1, 0, 0, 3), False),
        ((1, 0, 1, 0), True),
        ((1, 0, 1, 1), True),
        ((1, 0, 1, 2), True),
        ((1, 0, 1, 3), True),
        ((1, 0, 2, 0), False),
        ((1, 0, 2, 1), False),
        ((1, 0, 2, 2), True),
        ((1, 0, 2, 3), False),
        ((1, 0, 3, 0), False),
        ((1, 0, 3, 1), False),
        ((1, 0, 3, 2), False),
        ((1, 0, 3, 3), True),
        ((1, 1, 0, 0), True),
        ((1, 1, 0, 1), True),
        ((1, 1, 0, 2), True),
        ((1, 1, 0, 3), True),
        ((1, 1, 1, 0), True),
        ((1, 1, 1, 1), True),
        ((1, 1, 1, 2), True),
        ((1, 1, 1, 3), True),
        ((1, 1, 2, 0), True),
        ((1, 1, 2, 1), True),
        ((1, 1, 2, 2), True),
        ((1, 1, 2, 3), True),
        ((1, 1, 3, 0), True),
        ((1, 1, 3, 1), True),
        ((1, 1, 3, 2), True),
        ((1, 1, 3, 3), True),
        ((1, 2, 0, 0), False),
        ((1, 2, 0, 1), False),
        ((1, 2, 0, 2), True),
        ((1, 2, 0, 3), False),
        ((1, 2, 1, 0), False),
        ((1, 2, 1, 1), True),
        ((1, 2, 1, 2), False),
        ((1, 2, 1, 3), False),
        ((1, 2, 2, 0), True),
        ((1, 2, 2, 1), True),
        ((1, 2, 2, 2), True),
        ((1, 2, 2, 3), True),
        ((1, 2, 3, 0), False),
        ((1, 2, 3, 1), False),
        ((1, 2, 3, 2), False),
        ((1, 2, 3, 3), True),
        ((1, 3, 0, 0), False),
        ((1, 3, 0, 1), False),
        ((1, 3, 0, 2), False),
        ((1, 3, 0, 3), True),
        ((1, 3, 1, 0), False),
        ((1, 3, 1, 1), True),
        ((1, 3, 1, 2), False),
        ((1, 3, 1, 3), False),
        ((1, 3, 2, 0), False),
        ((1, 3, 2, 1), False),
        ((1, 3, 2, 2), True),
        ((1, 3, 2, 3), False),
        ((1, 3, 3, 0), True),
        ((1, 3, 3, 1), True),
        ((1, 3, 3, 2), True),
        ((1, 3, 3, 3), True),
        ((2, 0, 0, 0), False),
        ((2, 0, 0, 1), False),
        ((2, 0, 0, 2), True),
        ((2, 0, 0, 3), False),
        ((2, 0, 1, 0), False),
        ((2, 0, 1, 1), True),
        ((2, 0, 1, 2), False),
        ((2, 0, 1, 3), False),
        ((2, 0, 2, 0), True),
        ((2, 0, 2, 1), True),
        ((2, 0, 2, 2), True),
        ((2, 0, 2, 3), True),
        ((2, 0, 3, 0), False),
        ((2, 0, 3, 1), False),
        ((2, 0, 3, 2), False),
        ((2, 0, 3, 3), True),
        ((2, 1, 0, 0), False),
        ((2, 1, 0, 1), True),
        ((2, 1, 0, 2), False),
        ((2, 1, 0, 3), False),
        ((2, 1, 1, 0), True),
        ((2, 1, 1, 1), True),
        ((2, 1, 1, 2), True),
        ((2, 1, 1, 3), True),
        ((2, 1, 2, 0), False),
        ((2, 1, 2, 1), False),
        ((2, 1, 2, 2), True),
        ((2, 1, 2, 3), False),
        ((2, 1, 3, 0), False),
        ((2, 1, 3, 1), False),
        ((2, 1, 3, 2), False),
        ((2, 1, 3, 3), True),
        ((2, 2, 0, 0), True),
        ((2, 2, 0, 1), True),
        ((2, 2, 0, 2), True),
        ((2, 2, 0, 3), True),
        ((2, 2, 1, 0), True),
        ((2, 2, 1, 1), True),
        ((2, 2, 1, 2), True),
        ((2, 2, 1, 3), True),
        ((2, 2, 2, 0), True),
        ((2, 2, 2, 1), True),
        ((2, 2, 2, 2), True),
        ((2, 2, 2, 3), True),
        ((2, 2, 3, 0), True),
        ((2, 2, 3, 1), True),
        ((2, 2, 3, 2), True),
        ((2, 2, 3, 3), True),
        ((2, 3, 0, 0), False),
        ((2, 3, 0, 1), False),
        ((2, 3, 0, 2), False),
        ((2, 3, 0, 3), True),
        ((2, 3, 1, 0), False),
        ((2, 3, 1, 1), True),
        ((2, 3, 1, 2), False),
        ((2, 3, 1, 3), False),
        ((2, 3, 2, 0), False),
        ((2, 3, 2, 1), False),
        ((2, 3, 2, 2), True),
        ((2, 3, 2, 3), False),
        ((2, 3, 3, 0), True),
        ((2, 3, 3, 1), True),
        ((2, 3, 3, 2), True),
        ((2, 3, 3, 3), True),
        ((3, 0, 0, 0), False),
        ((3, 0, 0, 1), False),
        ((3, 0, 0, 2), False),
        ((3, 0, 0, 3), True),
        ((3, 0, 1, 0), False),
        ((3, 0, 1, 1), True),
        ((3, 0, 1, 2), False),
        ((3, 0, 1, 3), False),
        ((3, 0, 2, 0), False),
        ((3, 0, 2, 1), False),
        ((3, 0, 2, 2), True),
        ((3, 0, 2, 3), False),
        ((3, 0, 3, 0), True),
        ((3, 0, 3, 1), True),
        ((3, 0, 3, 2), True),
        ((3, 0, 3, 3), True),
        ((3, 1, 0, 0), False),
        ((3, 1, 0, 1), True),
        ((3, 1, 0, 2), False),
        ((3, 1, 0, 3), False),
        ((3, 1, 1, 0), True),
        ((3, 1, 1, 1), True),
        ((3, 1, 1, 2), True),
        ((3, 1, 1, 3), True),
        ((3, 1, 2, 0), False),
        ((3, 1, 2, 1), False),
        ((3, 1, 2, 2), True),
        ((3, 1, 2, 3), False),
        ((3, 1, 3, 0), False),
        ((3, 1, 3, 1), False),
        ((3, 1, 3, 2), False),
        ((3, 1, 3, 3), True),
        ((3, 2, 0, 0), False),
        ((3, 2, 0, 1), False),
        ((3, 2, 0, 2), True),
        ((3, 2, 0, 3), False),
        ((3, 2, 1, 0), False),
        ((3, 2, 1, 1), True),
        ((3, 2, 1, 2), False),
        ((3, 2, 1, 3), False),
        ((3, 2, 2, 0), True),
        ((3, 2, 2, 1), True),
        ((3, 2, 2, 2), True),
        ((3, 2, 2, 3), True),
        ((3, 2, 3, 0), False),
        ((3, 2, 3, 1), False),
        ((3, 2, 3, 2), False),
        ((3, 2, 3, 3), True),
        ((3, 3, 0, 0), True),
        ((3, 3, 0, 1), True),
        ((3, 3, 0, 2), True),
        ((3, 3, 0, 3), True),
        ((3, 3, 1, 0), True),
        ((3, 3, 1, 1), True),
        ((3, 3, 1, 2), True),
        ((3, 3, 1, 3), True),
        ((3, 3, 2, 0), True),
        ((3, 3, 2, 1), True),
        ((3, 3, 2, 2), True),
        ((3, 3, 2, 3), True),
        ((3, 3, 3, 0), True),
        ((3, 3, 3, 1), True),
        ((3, 3, 3, 2), True),
        ((3, 3, 3, 3), True),
      ]
      for line, fix in lines:
        print(f'{line = }, {game.sum_line(list(line))= }')

    if key == 'shift_line' and need_to_be_tested:
      lines = [
        ((0, 0, 0, 0), False),
        ((0, 0, 0, 1), False),
        ((0, 0, 0, 2), False),
        ((0, 0, 0, 3), False),
        ((0, 0, 1, 0), False),
        ((0, 0, 1, 1), True),
        ((0, 0, 1, 2), False),
        ((0, 0, 1, 3), False),
        ((0, 0, 2, 0), False),
        ((0, 0, 2, 1), False),
        ((0, 0, 2, 2), True),
        ((0, 0, 2, 3), False),
        ((0, 0, 3, 0), False),
        ((0, 0, 3, 1), False),
        ((0, 0, 3, 2), False),
        ((0, 0, 3, 3), True),
        ((0, 1, 0, 0), False),
        ((0, 1, 0, 1), True),
        ((0, 1, 0, 2), False),
        ((0, 1, 0, 3), False),
        ((0, 1, 1, 0), True),
        ((0, 1, 1, 1), True),
        ((0, 1, 1, 2), True),
        ((0, 1, 1, 3), True),
        ((0, 1, 2, 0), False),
        ((0, 1, 2, 1), False),
        ((0, 1, 2, 2), True),
        ((0, 1, 2, 3), False),
        ((0, 1, 3, 0), False),
        ((0, 1, 3, 1), False),
        ((0, 1, 3, 2), False),
        ((0, 1, 3, 3), True),
        ((0, 2, 0, 0), False),
        ((0, 2, 0, 1), False),
        ((0, 2, 0, 2), True),
        ((0, 2, 0, 3), False),
        ((0, 2, 1, 0), False),
        ((0, 2, 1, 1), True),
        ((0, 2, 1, 2), False),
        ((0, 2, 1, 3), False),
        ((0, 2, 2, 0), True),
        ((0, 2, 2, 1), True),
        ((0, 2, 2, 2), True),
        ((0, 2, 2, 3), True),
        ((0, 2, 3, 0), False),
        ((0, 2, 3, 1), False),
        ((0, 2, 3, 2), False),
        ((0, 2, 3, 3), True),
        ((0, 3, 0, 0), False),
        ((0, 3, 0, 1), False),
        ((0, 3, 0, 2), False),
        ((0, 3, 0, 3), True),
        ((0, 3, 1, 0), False),
        ((0, 3, 1, 1), True),
        ((0, 3, 1, 2), False),
        ((0, 3, 1, 3), False),
        ((0, 3, 2, 0), False),
        ((0, 3, 2, 1), False),
        ((0, 3, 2, 2), True),
        ((0, 3, 2, 3), False),
        ((0, 3, 3, 0), True),
        ((0, 3, 3, 1), True),
        ((0, 3, 3, 2), True),
        ((0, 3, 3, 3), True),
        ((1, 0, 0, 0), False),
        ((1, 0, 0, 1), True),
        ((1, 0, 0, 2), False),
        ((1, 0, 0, 3), False),
        ((1, 0, 1, 0), True),
        ((1, 0, 1, 1), True),
        ((1, 0, 1, 2), True),
        ((1, 0, 1, 3), True),
        ((1, 0, 2, 0), False),
        ((1, 0, 2, 1), False),
        ((1, 0, 2, 2), True),
        ((1, 0, 2, 3), False),
        ((1, 0, 3, 0), False),
        ((1, 0, 3, 1), False),
        ((1, 0, 3, 2), False),
        ((1, 0, 3, 3), True),
        ((1, 1, 0, 0), True),
        ((1, 1, 0, 1), True),
        ((1, 1, 0, 2), True),
        ((1, 1, 0, 3), True),
        ((1, 1, 1, 0), True),
        ((1, 1, 1, 1), True),
        ((1, 1, 1, 2), True),
        ((1, 1, 1, 3), True),
        ((1, 1, 2, 0), True),
        ((1, 1, 2, 1), True),
        ((1, 1, 2, 2), True),
        ((1, 1, 2, 3), True),
        ((1, 1, 3, 0), True),
        ((1, 1, 3, 1), True),
        ((1, 1, 3, 2), True),
        ((1, 1, 3, 3), True),
        ((1, 2, 0, 0), False),
        ((1, 2, 0, 1), False),
        ((1, 2, 0, 2), True),
        ((1, 2, 0, 3), False),
        ((1, 2, 1, 0), False),
        ((1, 2, 1, 1), True),
        ((1, 2, 1, 2), False),
        ((1, 2, 1, 3), False),
        ((1, 2, 2, 0), True),
        ((1, 2, 2, 1), True),
        ((1, 2, 2, 2), True),
        ((1, 2, 2, 3), True),
        ((1, 2, 3, 0), False),
        ((1, 2, 3, 1), False),
        ((1, 2, 3, 2), False),
        ((1, 2, 3, 3), True),
        ((1, 3, 0, 0), False),
        ((1, 3, 0, 1), False),
        ((1, 3, 0, 2), False),
        ((1, 3, 0, 3), True),
        ((1, 3, 1, 0), False),
        ((1, 3, 1, 1), True),
        ((1, 3, 1, 2), False),
        ((1, 3, 1, 3), False),
        ((1, 3, 2, 0), False),
        ((1, 3, 2, 1), False),
        ((1, 3, 2, 2), True),
        ((1, 3, 2, 3), False),
        ((1, 3, 3, 0), True),
        ((1, 3, 3, 1), True),
        ((1, 3, 3, 2), True),
        ((1, 3, 3, 3), True),
        ((2, 0, 0, 0), False),
        ((2, 0, 0, 1), False),
        ((2, 0, 0, 2), True),
        ((2, 0, 0, 3), False),
        ((2, 0, 1, 0), False),
        ((2, 0, 1, 1), True),
        ((2, 0, 1, 2), False),
        ((2, 0, 1, 3), False),
        ((2, 0, 2, 0), True),
        ((2, 0, 2, 1), True),
        ((2, 0, 2, 2), True),
        ((2, 0, 2, 3), True),
        ((2, 0, 3, 0), False),
        ((2, 0, 3, 1), False),
        ((2, 0, 3, 2), False),
        ((2, 0, 3, 3), True),
        ((2, 1, 0, 0), False),
        ((2, 1, 0, 1), True),
        ((2, 1, 0, 2), False),
        ((2, 1, 0, 3), False),
        ((2, 1, 1, 0), True),
        ((2, 1, 1, 1), True),
        ((2, 1, 1, 2), True),
        ((2, 1, 1, 3), True),
        ((2, 1, 2, 0), False),
        ((2, 1, 2, 1), False),
        ((2, 1, 2, 2), True),
        ((2, 1, 2, 3), False),
        ((2, 1, 3, 0), False),
        ((2, 1, 3, 1), False),
        ((2, 1, 3, 2), False),
        ((2, 1, 3, 3), True),
        ((2, 2, 0, 0), True),
        ((2, 2, 0, 1), True),
        ((2, 2, 0, 2), True),
        ((2, 2, 0, 3), True),
        ((2, 2, 1, 0), True),
        ((2, 2, 1, 1), True),
        ((2, 2, 1, 2), True),
        ((2, 2, 1, 3), True),
        ((2, 2, 2, 0), True),
        ((2, 2, 2, 1), True),
        ((2, 2, 2, 2), True),
        ((2, 2, 2, 3), True),
        ((2, 2, 3, 0), True),
        ((2, 2, 3, 1), True),
        ((2, 2, 3, 2), True),
        ((2, 2, 3, 3), True),
        ((2, 3, 0, 0), False),
        ((2, 3, 0, 1), False),
        ((2, 3, 0, 2), False),
        ((2, 3, 0, 3), True),
        ((2, 3, 1, 0), False),
        ((2, 3, 1, 1), True),
        ((2, 3, 1, 2), False),
        ((2, 3, 1, 3), False),
        ((2, 3, 2, 0), False),
        ((2, 3, 2, 1), False),
        ((2, 3, 2, 2), True),
        ((2, 3, 2, 3), False),
        ((2, 3, 3, 0), True),
        ((2, 3, 3, 1), True),
        ((2, 3, 3, 2), True),
        ((2, 3, 3, 3), True),
        ((3, 0, 0, 0), False),
        ((3, 0, 0, 1), False),
        ((3, 0, 0, 2), False),
        ((3, 0, 0, 3), True),
        ((3, 0, 1, 0), False),
        ((3, 0, 1, 1), True),
        ((3, 0, 1, 2), False),
        ((3, 0, 1, 3), False),
        ((3, 0, 2, 0), False),
        ((3, 0, 2, 1), False),
        ((3, 0, 2, 2), True),
        ((3, 0, 2, 3), False),
        ((3, 0, 3, 0), True),
        ((3, 0, 3, 1), True),
        ((3, 0, 3, 2), True),
        ((3, 0, 3, 3), True),
        ((3, 1, 0, 0), False),
        ((3, 1, 0, 1), True),
        ((3, 1, 0, 2), False),
        ((3, 1, 0, 3), False),
        ((3, 1, 1, 0), True),
        ((3, 1, 1, 1), True),
        ((3, 1, 1, 2), True),
        ((3, 1, 1, 3), True),
        ((3, 1, 2, 0), False),
        ((3, 1, 2, 1), False),
        ((3, 1, 2, 2), True),
        ((3, 1, 2, 3), False),
        ((3, 1, 3, 0), False),
        ((3, 1, 3, 1), False),
        ((3, 1, 3, 2), False),
        ((3, 1, 3, 3), True),
        ((3, 2, 0, 0), False),
        ((3, 2, 0, 1), False),
        ((3, 2, 0, 2), True),
        ((3, 2, 0, 3), False),
        ((3, 2, 1, 0), False),
        ((3, 2, 1, 1), True),
        ((3, 2, 1, 2), False),
        ((3, 2, 1, 3), False),
        ((3, 2, 2, 0), True),
        ((3, 2, 2, 1), True),
        ((3, 2, 2, 2), True),
        ((3, 2, 2, 3), True),
        ((3, 2, 3, 0), False),
        ((3, 2, 3, 1), False),
        ((3, 2, 3, 2), False),
        ((3, 2, 3, 3), True),
        ((3, 3, 0, 0), True),
        ((3, 3, 0, 1), True),
        ((3, 3, 0, 2), True),
        ((3, 3, 0, 3), True),
        ((3, 3, 1, 0), True),
        ((3, 3, 1, 1), True),
        ((3, 3, 1, 2), True),
        ((3, 3, 1, 3), True),
        ((3, 3, 2, 0), True),
        ((3, 3, 2, 1), True),
        ((3, 3, 2, 2), True),
        ((3, 3, 2, 3), True),
        ((3, 3, 3, 0), True),
        ((3, 3, 3, 1), True),
        ((3, 3, 3, 2), True),
        ((3, 3, 3, 3), True),
      ]
      for line, fix in lines:
        print(f'{line = }, {game.shift_line(list(line))= }')